/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.gsu.help;

import java.util.Arrays;
import java.util.Date;
import java.util.Random;

/**
 *
 * @author ageraldo1
 */
public class QuickSorter {
    public static void sort(int[] a) {
        sort(a, 0, a.length -1);
    }
    
    private static void sort(int[] a, int from, int to) {
        if ( from >= to) return;
        int p = partition(a, from, to);
        sort(a, from, p);
        sort(a, p+1, to);
    }
    
    private static int partition(int[] a, int from, int to) {
        int pivot = a[from];
        int i = from -1;
        int j = to + 1;
        
        while ( i < j) {
            i++; while ( a[i] < pivot) { i++; }
            j--; while ( a[j] > pivot) { j--; }
            
            if ( i < j ) {
                int temp = a[i];
                a[i] = a[j];
                a[j] = temp;
            }            
        }
        
        return j;
    }
    
    public static void main (String[] args) {
        final int MAX_ITEMS=20;
        int[] a = new int[MAX_ITEMS];
        
        Random rand = new Random();
        
        for ( int i = 0; i < MAX_ITEMS; i++) {
            a[i] = rand.nextInt(100);
        }
        
        
        System.out.println ("Original array...............:" + Arrays.toString(a));

        Date start = new java.util.Date();
        sort(a);
        Date end = new java.util.Date();    
        long diff = end.getTime() - start.getTime();
            
        System.out.println ("Sorted array.................:" + Arrays.toString(a));
        
        System.out.println ("Time taken for " + MAX_ITEMS + " elements...:" + diff);
    }    
    
}














/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.gsu.help;

import java.util.Arrays;
import java.util.Random;
import java.util.Date;

/**
 *
 * @author ageraldo1
 */
public class MergerSorter {
    
    public static void sort(int[] a) {
        if ( a.length <= 1) return;
        
        int[] first = new int[a.length / 2];
        int[] second = new int[a.length - first.length];
        
        for (int i = 0; i < first.length; i++) {
            first[i] = a[i];
        }
        
        for ( int i = 0; i < second.length; i++) {
            second[i] = a[first.length + i];
        }
        
        sort(first);
        sort(second);
        merge(first, second, a);
    }
    
    public static void merge(int[] first, int[] second, int[] a) {
        int iFirst = 0;
        int iSecond = 0;
        int j = 0;
        
        while ( iFirst < first.length && iSecond < second.length) {
            if ( first[iFirst] < second[iSecond]) {
                a[j] = first[iFirst];
                iFirst++;
                
            } else { 
                a[j] = second[iSecond];
                iSecond++;
            }
            j++;
        }
        
        while ( iFirst < first.length) {
            a[j] = first[iFirst];
            iFirst ++;
            j++;
        }
        
        while ( iSecond < second.length) {
            a[j] = second[iSecond];
            iSecond++;
            j++;
        }
    }
    
    public static void main (String[] args) {
        final int MAX_ITEMS=20;
        int[] a = new int[MAX_ITEMS];
        
        Random rand = new Random();
        
        for ( int i = 0; i < MAX_ITEMS; i++) {
            a[i] = rand.nextInt(100);
        }
        
        
        System.out.println ("Original array...............:" + Arrays.toString(a));

        Date start = new java.util.Date();
        sort(a);
        Date end = new java.util.Date();    
        long diff = end.getTime() - start.getTime();
            
        System.out.println ("Sorted array.................:" + Arrays.toString(a));
        
        System.out.println ("Time taken for " + MAX_ITEMS + " elements...:" + diff);
    }
    
}
